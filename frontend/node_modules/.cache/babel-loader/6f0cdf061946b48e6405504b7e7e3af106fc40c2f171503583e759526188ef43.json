{"ast":null,"code":"var _jsxFileName = \"/Users/yuvrajrekhi/Documents/Secret Santa/Secret-Santa/frontend/src/Pages/Home.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport InputNames from \"../components/InputNames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [submitted, setSubmitted] = useState(false);\n  const handleSubmit = async (event, names, emails, setError) => {\n    if (!submitted) {\n      event.preventDefault();\n      const namesList = {\n        namesList: names\n      };\n      const response = await fetch(\"/api/assignments/generate\", {\n        method: 'POST',\n        body: JSON.stringify(namesList),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const json = await response.json();\n      if (!response.ok) {\n        setError(json.error);\n      }\n      if (response.ok) {\n        const emailTemplates = [];\n        json.forEach(element => {\n          const {\n            to,\n            from\n          } = element;\n          emailTemplates.push({\n            to,\n            from\n          });\n        });\n        console.log(emailTemplates);\n\n        // create email template objects {emailTo, respectiveAssignment} and make call to /send-emails. Each email will contain who each person is buying for\n\n        //setSubmitted(true);\n      }\n    }\n  };\n  if (!submitted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-names\",\n        children: /*#__PURE__*/_jsxDEV(InputNames, {\n          onSubmit: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-names\",\n        children: /*#__PURE__*/_jsxDEV(InputNames, {\n          onSubmit: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Submitted!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(Home, \"S6ipnhtDax9I0+B/fnlVz3+f6e8=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","InputNames","jsxDEV","_jsxDEV","Home","_s","submitted","setSubmitted","handleSubmit","event","names","emails","setError","preventDefault","namesList","response","fetch","method","body","JSON","stringify","headers","json","ok","error","emailTemplates","forEach","element","to","from","push","console","log","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yuvrajrekhi/Documents/Secret Santa/Secret-Santa/frontend/src/Pages/Home.js"],"sourcesContent":["import { useState } from \"react\";\nimport InputNames from \"../components/InputNames\";\n\nexport default function Home(){\n\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleSubmit = async (event, names, emails, setError) => {\n\n    if(!submitted){\n      event.preventDefault();\n\n    const namesList = {\n      namesList: names\n    }\n\n    const response = await fetch(\"/api/assignments/generate\", {\n        method: 'POST',\n        body: JSON.stringify(namesList),\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n\n    const json = await response.json()\n\n    if (!response.ok) {\n      setError(json.error)\n    }\n    if (response.ok) {\n\n      const emailTemplates = [];\n      json.forEach((element) => {\n        const { to, from } = element;\n        emailTemplates.push({to, from})\n      });\n      console.log(emailTemplates)\n\n      // create email template objects {emailTo, respectiveAssignment} and make call to /send-emails. Each email will contain who each person is buying for\n\n\n      //setSubmitted(true);\n    }\n    }\n    \n\n  }\n\n  if (!submitted){\n    return (\n      <div className=\"home\">\n        <div className = \"input-names\">\n          <InputNames onSubmit = {handleSubmit}></InputNames>\n        </div>\n        <div className=\"footer\"></div>\n      </div>\n    );\n  }else{\n    return (\n      <div className=\"home\">\n        <div className = \"input-names\">\n          <InputNames onSubmit = {handleSubmit}></InputNames>\n        </div>\n        <div>\n          <p>Submitted!</p>\n        </div>\n        <div className=\"footer\"></div>\n      </div>\n    );\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}